什么是事件对象? 

既然谈到事件对象了，那么我们可以发现“事件”和“对象”，

就是指一个事件是从哪个对象来的，

或者说事件的来源是哪个对象。

我们知道既然是事件对象，那么我们是不是可以通过某个办法来找到事件源？

我们需要记事件对象里包含哪些东西吗？是不是不需要记，我们既然能拿到这个事件对象了

是不是通过console.log打印这个事件对象就知道它有哪些属性了是不是这样的。

既然谈到了事件对象，那么他还有事件机制，就是事件冒泡和事件捕获；

那么什么是事件冒泡和事件捕获呢？


事件冒泡一般不是指一个事件对象在js中体现事件冒泡或者事件默认的，我们只能说事件回调；

事件冒泡而是因为DOM树的分支节点绑定的事件引起的,

因为子节点绑定事件会触发父节点的方法所造成的一个事件冒泡,

因为子节点是一个包含父节点的一个关系。自下而上的传递事件。


事件捕获和事件冒泡相反，它是由父节点的事件触发所有子节点绑定的事件，自上而下的传递事件。


事件委托是由开发人员来做的一种策略方案并不是JS原本固有的规范，

事件委托是把原本A对象做的事交给B对象来做事件处理，这一般用在一对多的关系。

也是通常用于节点做事件处理。

假设多个节点都要注册同一个事件。这时候就交给父节点来做事件注册，

父节点只需要在事件调用的时候把事件处理的任务交给我子节点对象就可以了，

我们可以发现父节点其实只是做事件绑定，事件处理还是交给子节点来做。

父节点的事件在做事件调用的时候只需要获取父节点下所有委托的子节点对象即可。


