谈谈JavaScript事件机制分为事件冒泡，事件捕获以及事件循环

在JavaScript中把标准事件模型的执行分为三个阶段，即捕获阶段->目标阶段->冒泡阶段。

在事件的传播过程中，事件先沿着document节点，一层一层的向下传播，

直到遇到注册事件的目标节点，这个过程称之为捕获阶段。

元素注册的事件函数开始运行，运行完毕则由沿着DOM树向上层传播，

回到document节点则事件结束，这个过程称之为事件冒泡。

在IE8之前的事件机制没有捕获阶段，只有目标阶段和冒泡阶段。

谈谈JavaScript事件机制分为事件冒泡，

事件捕获以及事件循环

事件冒泡和事件捕获恰恰相反，

事件注册分为三种，一种是dom0级事件，这种方式是直接把事件绑定在元素的标签中；

一种是dom2级事件，这种方式是通过获取元素把事件绑定在改节点对象中；

另一种是通过事件监听dom，el.addEventListener()和attachEvent()

el.addEventListener()第一参数是事件的类型，第二个参数是事件的函数，

第三个参数是一个布尔值，是否捕获，

默认为true在捕获阶段，false为冒泡阶段。

attachEvent("on"+type,fn)仅有两个参数，第一个参数是事件的类型，第二个则是事件的函数。

在标准事件监听中移除事件监听使用el.removeEventListener()第一参数是事件的类型，

第二个参数是事件的函数。 

IE8之前则使用target.detachEvent("on"+type,fn)；

如果进一步深入请打开“面试题.md”文件阅读“事件循环”这段文案。
